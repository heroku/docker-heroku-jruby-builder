version: 2.1

workflows:
  version: 2.1
  heroku-18:
    jobs:
      - build-jruby:
          stack: "heroku-18"
      - upload-to-s3:
          stack: "heroku-18"
          bucket_name: $PRODUCTION_BUCKET_NAME
          aws_access_key_id: $PRODUCTION_AWS_ACCESS_KEY_ID
          aws_secret_access_key: $PRODUCTION_AWS_SECRET_ACCESS_KEY
          requires:
            - build-jruby
  heroku-20:
    jobs:
      - build-jruby:
          stack: "heroku-20"
      - upload-to-s3:
          stack: "heroku-20"
          bucket_name: $PRODUCTION_BUCKET_NAME
          aws_access_key_id: $PRODUCTION_AWS_ACCESS_KEY_ID
          aws_secret_access_key: $PRODUCTION_AWS_SECRET_ACCESS_KEY
          requires:
            - build-jruby
  heroku-22:
    jobs:
      - build-jruby:
          stack: "heroku-22"
      - upload-to-s3:
          stack: "heroku-22"
          bucket_name: $PRODUCTION_BUCKET_NAME
          aws_access_key_id: $PRODUCTION_AWS_ACCESS_KEY_ID
          aws_secret_access_key: $PRODUCTION_AWS_SECRET_ACCESS_KEY
          requires:
            - build-jruby

jobs:
  build-jruby:
    machine:
      docker_layer_caching: true
    parameters:
      stack:
        type: string
    steps:
      - checkout
      - run: |
          gem install bundler -v 1.17.3
          bundle install
          bundle exec rake generate_image[<< parameters.stack >>]
          bundle exec rake new[$JRUBY_VERSION,<< parameters.stack >>]
          bash rubies/<< parameters.stack >>/ruby-*-jruby-$JRUBY_VERSION.sh
      - persist_to_workspace:
          root: .
          paths:
            - builds
  upload-to-s3:
    docker:
      - image: circleci/python:2.7-stretch
    parameters:
      bucket_name:
        type: string
      aws_access_key_id:
        type: string
      aws_secret_access_key:
        type: string
      stack:
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Install AWS CLI
          command: sudo pip install awscli
      - run:
          name: Setup AWS Credentials
          command: |
            mkdir -p ~/.aws/
            printf "[<< parameters.bucket_name >>]\naws_access_key_id = << parameters.aws_access_key_id >>\naws_secret_access_key = << parameters.aws_secret_access_key >>" > ~/.aws/credentials
      - run:
          name: Upload JRuby to S3
          command: |
            export RUBY_VERSIONS=$(ls rubies/<< parameters.stack >>/ruby-*-jruby-$JRUBY_VERSION.sh | sed -e 's/^.*ruby-\(.*\)-jruby.*$/\1/g')
            if [ $RUBY_VERSIONS ]; then
              for ruby_version in $RUBY_VERSIONS; do aws s3 cp /tmp/workspace/builds/<< parameters.stack >>/ruby-$ruby_version-jruby-$JRUBY_VERSION.tgz \
                s3://<< parameters.bucket_name >>/<< parameters.stack >>/ruby-$ruby_version-jruby-$JRUBY_VERSION.tgz \
                --profile "<< parameters.bucket_name >>" --acl public-read; done
            else
              exit 1
            fi
